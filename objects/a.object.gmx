<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>totalOptions = 3;
i = 0;
loadGame1 = 0;
loadGame2 = 0;
loadGame3 = 0;
error = 1;
timingError = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move between options
if (i &lt; totalOptions-1) &amp;&amp; (keyboard_check_pressed(vk_right)) {
    i += 1;
}

if (i &gt; 0) &amp;&amp; (keyboard_check_pressed(vk_left)) {
    i -= 1;
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Choose savegame
if (keyboard_check_pressed(vk_enter)) {
    if i = 0 {
        loadGame1 = 1;
    } else { 
        loadGame1 = 0;     
    }
    if i = 1 {
        loadGame2 = 1;
    } else { 
        loadGame2 = 0;     
    }
    if i = 2 {
        loadGame3 = 1;
    } else { 
        loadGame3 = 0;     
    }
} else {
    loadGame1 = 0;
    loadGame2 = 0;
    loadGame3 = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load game 1
if (loadGame1 = 1) &amp;&amp; (file_exists("Save1.sav")) {
    
    ini_open("Save1.sav");
    
    //Profile
        global.saveNum = ini_read_real("Profile","saveNum",1);
        global.NameProfile = ini_read_string("Profile","NameProfile","NameProfile");
        global.configStatsBar = ini_read_real("Profile","configStatsBar",1);
        global.configStatsInfo = ini_read_real("Profile","configStatsInfo",1);
        global.configCDbar = ini_read_real("Profile","configCDbar",1);    
        
    //Progress
        global.worlds = ini_read_real("Progress","worlds",1);
        global.lvlMap1 = ini_read_real("Progress","lvlMap1",1);
        global.lvlMap2 = ini_read_real("Progress","lvlMap2",0);
        global.lvlMap3 = ini_read_real("Progress","lvlMap3",0);
        global.lvlMap4 = ini_read_real("Progress","lvlMap4",0);
        global.lvlMap5 = ini_read_real("Progress","lvlMap5",0);
        global.lvlMap6 = ini_read_real("Progress","lvlMap6",0);
        global.hPlayed = ini_read_real("Progress","hPlayed",0);
        global.mPlayed = ini_read_real("Progress","mPlayed",0);
        global.sPlayed = ini_read_real("Progress","sPlayed",0);
        global.progress = ini_read_real("Progress","progress",0);
    
    //Stats
        //Heal
        global.playerMaxHeal = ini_read_real("Stats - Heal","playerMaxHeal",50);
        global.regenHPs = ini_read_real("Stats - Heal","regenHPs",120); 
    
        //Stamina
        global.playerMaxStamina = ini_read_real("Stats - Stamina","playerMaxStamina",100);
        global.regenSTs = ini_read_real("Stats - Stamina","regenSTs",30);
        
        //Exp
        global.playerEXP = ini_read_real("Stats - Exp","playerEXP",1);
        global.playerEXPnextLvL = ini_read_real("Stats - Exp","playerEXPnextLvL",10);
        global.playerLvL = ini_read_real("Stats - Exp","playerLvL",1);
        global.playerPH = ini_read_real("Stats - Exp","playerPH",0);
        
        //Basic
        global.playerAD = ini_read_real("Stats - Basic","playerAD",1);
        global.playerPenArm = ini_read_real("Stats - Basic","playerPenArm",1);
        global.playerTrueAD = ini_read_real("Stats - Basic","playerTrueAD",1);
        global.playerAP = ini_read_real("Stats - Basic","playerAP",1);
        global.playerPenAP = ini_read_real("Stats - Basic","playerPenAP",1)
        global.playerTrueAP = ini_read_real("Stats - Basic","playerTrueAP",1);
        global.playerCritickProbability = ini_read_real("Stats - Basic","playerCritickProbability",30);
        global.playerCritickDamage = ini_read_real("Stats - Basic","playerCritickDamage",10);
        global.playerArmour = ini_read_real("Stats - Basic","playerArmour",1);
        global.playerResAP = ini_read_real("Stats - Basic","playerResAP",1);
        global.resKnockback = ini_read_real("Stats - Basic","resKnockback",1);
        
        
        // Basic attack 
        global.BasicAttackCD = ini_read_real("Stats - Basic Attack","BasicAttackCD",1);
        global.staminaBasicAttack = ini_read_real("Stats - Basic Attack","staminaBasicAttack",10);
        
        global.playerADBasicAttack = ini_read_real("Stats - Basic Attack","playerADBasicAttack",1);
        global.playerPenArmBasicAttack = ini_read_real("Stats - Basic Attack","playerPenArmBasicAttack",1);
        global.playerTrueADBasicAttack = ini_read_real("Stats - Basic Attack","playerTrueADBasicAttack",1);
        global.playerAPBasicAttack = ini_read_real("Stats - Basic Attack","playerAPBasicAttack",1);
        global.playerPenAPBasicAttack = ini_read_real("Stats - Basic Attack","playerPenAPBasicAttack",1);
        global.playerTrueAPBasicAttack = ini_read_real("Stats - Basic Attack","playerTrueAPBasicAttack",1);
        global.playerCritickProbabilityBasicAttack = ini_read_real("Stats - Basic Attack","playerCritickProbabilityBasicAttack",1);
        global.playerCritickDamageBasicAttack = ini_read_real("Stats - Basic Attack","playerCritickDamageBasicAttack",1);
        
        // Spin
        global.SpinCD = ini_read_real("Stats - Spin","SpinCD",1);
        global.staminaSpin = ini_read_real("Stats - Spin","staminaSpin",30);
        
        global.playerADSpin = ini_read_real("Stats - Spin","playerADSpin",1);
        global.playerPenArmSpin = ini_read_real("Stats - Spin","playerPenArmSpin",1);
        global.playerTrueADSpin = ini_read_real("Stats - Spin","playerTrueADSpin",1);
        global.playerAPSpin = ini_read_real("Stats - Spin","playerAPSpin",1);
        global.playerPenAPSpin = ini_read_real("Stats - Spin","playerPenAPSpin",1);
        global.playerTrueAPSpin = ini_read_real("Stats - Spin","playerTrueAPSpin",1);
        global.playerCritickProbabilitySpin = ini_read_real("Stats - Spin","playerCritickProbabilitySpin",1);
        global.playerCritickDamageSpin = ini_read_real("Stats - Spin","playerCritickDamageSpin",1);
        
        // Vertical Dash
        global.VerticalDashCD = ini_read_real("Stats - Vertical Dash","VerticalDashCD",2);
        global.staminaVDash = ini_read_real("Stats - Vertical Dash","staminaVDash",15);
        
        global.playerADVDash = ini_read_real("Stats - Vertical Dash","playerADVDash",1);
        global.playerPenArmVDash = ini_read_real("Stats - Vertical Dash","playerPenArmVDash",1);
        global.playerTrueADVDash = ini_read_real("Stats - Vertical Dash","playerTrueADVDash",1);
        global.playerAPVDash = ini_read_real("Stats - Vertical Dash","playerAPVDash",1);
        global.playerPenAPVDash = ini_read_real("Stats - Vertical Dash","playerPenAPVDash",1);
        global.playerTrueAPVDash = ini_read_real("Stats - Vertical Dash","playerTrueAPVDash",1);
        global.playerCritickProbabilityVDash = ini_read_real("Stats - Vertical Dash","playerCritickProbabilityVDash",1);
        global.playerCritickDamageVDash = ini_read_real("Stats - Vertical Dash","playerCritickDamageVDash",1);
        
        // Horizontal Dash (-45, 0, +45)
        global.HorizontalDashCD = ini_read_real("Stats - Horizontal Dash","HorizontalDashCD",3);
        global.staminaHDash = ini_read_real("Stats - Horizontal Dash","staminaHDash",20);
        
        global.playerADHDash = ini_read_real("Stats - Horizontal Dash","playerADHDash",1);
        global.playerPenArmHDash = ini_read_real("Stats - Horizontal Dash","playerPenArmHDash",1);
        global.playerTrueADHDash = ini_read_real("Stats - Horizontal Dash","playerTrueADHDash",1);
        global.playerAPHDash = ini_read_real("Stats - Horizontal Dash","playerAPHDash",1);
        global.playerPenAPHDash = ini_read_real("Stats - Horizontal Dash","playerPenAPHDash",1);
        global.playerTrueAPHDash = ini_read_real("Stats - Horizontal Dash","playerTrueAPHDash",1);
        global.playerCritickProbabilityHDash = ini_read_real("Combat","playerCritickProbabilityHDash",1); 
        global.playerCritickDamageHDash = ini_read_real("Stats - Horizontal Dash","playerCritickDamageHDash",1);
    
    ini_close();
    room_goto(room_worlds);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load game 2
if (loadGame2 = 1) &amp;&amp; (file_exists("Save2.sav")) {
    
    ini_open("Save2.sav");
    
    //Profile
        global.saveNum = ini_read_real("Profile","saveNum",2);
        global.NameProfile = ini_read_string("Profile","NameProfile","NameProfile");
        global.configStatsBar = ini_read_real("Profile","configStatsBar",1);
        global.configStatsInfo = ini_read_real("Profile","configStatsInfo",1);
        global.configCDbar = ini_read_real("Profile","configCDbar",1);    
        
    //Progress
        global.worlds = ini_read_real("Progress","worlds",1);
        global.lvlMap1 = ini_read_real("Progress","lvlMap1",1);
        global.lvlMap2 = ini_read_real("Progress","lvlMap2",0);
        global.lvlMap3 = ini_read_real("Progress","lvlMap3",0);
        global.lvlMap4 = ini_read_real("Progress","lvlMap4",0);
        global.lvlMap5 = ini_read_real("Progress","lvlMap5",0);
        global.lvlMap6 = ini_read_real("Progress","lvlMap6",0);
        global.hPlayed = ini_read_real("Progress","hPlayed",0);
        global.mPlayed = ini_read_real("Progress","mPlayed",0);
        global.sPlayed = ini_read_real("Progress","sPlayed",0);
        global.progress = ini_read_real("Progress","progress",0);
    
    //Stats
        //Heal
        global.playerMaxHeal = ini_read_real("Stats - Heal","playerMaxHeal",50);
        global.regenHPs = ini_read_real("Stats - Heal","regenHPs",120); 
    
        //Stamina
        global.playerMaxStamina = ini_read_real("Stats - Stamina","playerMaxStamina",100);
        global.regenSTs = ini_read_real("Stats - Stamina","regenSTs",30);
        
        //Exp
        global.playerEXP = ini_read_real("Stats - Exp","playerEXP",0);
        global.playerEXPnextLvL = ini_read_real("Stats - Exp","playerEXPnextLvL",10);
        global.playerLvL = ini_read_real("Stats - Exp","playerLvL",1);
        global.playerPH = ini_read_real("Stats - Exp","playerPH",0);
        
        //Basic
        global.playerAD = ini_read_real("Stats - Basic","playerAD",1);
        global.playerPenArm = ini_read_real("Stats - Basic","playerPenArm",1);
        global.playerTrueAD = ini_read_real("Stats - Basic","playerTrueAD",1);
        global.playerAP = ini_read_real("Stats - Basic","playerAP",1);
        global.playerPenAP = ini_read_real("Stats - Basic","playerPenAP",1)
        global.playerTrueAP = ini_read_real("Stats - Basic","playerTrueAP",1);
        global.playerCritickProbability = ini_read_real("Stats - Basic","playerCritickProbability",30);
        global.playerCritickDamage = ini_read_real("Stats - Basic","playerCritickDamage",10);
        global.playerArmour = ini_read_real("Stats - Basic","playerArmour",1);
        global.playerResAP = ini_read_real("Stats - Basic","playerResAP",1);
        global.resKnockback = ini_read_real("Stats - Basic","resKnockback",1);
        
        
        // Basic attack 
        global.BasicAttackCD = ini_read_real("Stats - Basic Attack","BasicAttackCD",1);
        global.staminaBasicAttack = ini_read_real("Stats - Basic Attack","staminaBasicAttack",10);
        
        global.playerADBasicAttack = ini_read_real("Stats - Basic Attack","playerADBasicAttack",1);
        global.playerPenArmBasicAttack = ini_read_real("Stats - Basic Attack","playerPenArmBasicAttack",1);
        global.playerTrueADBasicAttack = ini_read_real("Stats - Basic Attack","playerTrueADBasicAttack",1);
        global.playerAPBasicAttack = ini_read_real("Stats - Basic Attack","playerAPBasicAttack",1);
        global.playerPenAPBasicAttack = ini_read_real("Stats - Basic Attack","playerPenAPBasicAttack",1);
        global.playerTrueAPBasicAttack = ini_read_real("Stats - Basic Attack","playerTrueAPBasicAttack",1);
        global.playerCritickProbabilityBasicAttack = ini_read_real("Stats - Basic Attack","playerCritickProbabilityBasicAttack",1);
        global.playerCritickDamageBasicAttack = ini_read_real("Stats - Basic Attack","playerCritickDamageBasicAttack",1);
        
        // Spin
        global.SpinCD = ini_read_real("Stats - Spin","SpinCD",1);
        global.staminaSpin = ini_read_real("Stats - Spin","staminaSpin",30);
        
        global.playerADSpin = ini_read_real("Stats - Spin","playerADSpin",1);
        global.playerPenArmSpin = ini_read_real("Stats - Spin","playerPenArmSpin",1);
        global.playerTrueADSpin = ini_read_real("Stats - Spin","playerTrueADSpin",1);
        global.playerAPSpin = ini_read_real("Stats - Spin","playerAPSpin",1);
        global.playerPenAPSpin = ini_read_real("Stats - Spin","playerPenAPSpin",1);
        global.playerTrueAPSpin = ini_read_real("Stats - Spin","playerTrueAPSpin",1);
        global.playerCritickProbabilitySpin = ini_read_real("Stats - Spin","playerCritickProbabilitySpin",1);
        global.playerCritickDamageSpin = ini_read_real("Stats - Spin","playerCritickDamageSpin",1);
        
        // Vertical Dash
        global.VerticalDashCD = ini_read_real("Stats - Vertical Dash","VerticalDashCD",2);
        global.staminaVDash = ini_read_real("Stats - Vertical Dash","staminaVDash",15);
        
        global.playerADVDash = ini_read_real("Stats - Vertical Dash","playerADVDash",1);
        global.playerPenArmVDash = ini_read_real("Stats - Vertical Dash","playerPenArmVDash",1);
        global.playerTrueADVDash = ini_read_real("Stats - Vertical Dash","playerTrueADVDash",1);
        global.playerAPVDash = ini_read_real("Stats - Vertical Dash","playerAPVDash",1);
        global.playerPenAPVDash = ini_read_real("Stats - Vertical Dash","playerPenAPVDash",1);
        global.playerTrueAPVDash = ini_read_real("Stats - Vertical Dash","playerTrueAPVDash",1);
        global.playerCritickProbabilityVDash = ini_read_real("Stats - Vertical Dash","playerCritickProbabilityVDash",1);
        global.playerCritickDamageVDash = ini_read_real("Stats - Vertical Dash","playerCritickDamageVDash",1);
        
        // Horizontal Dash (-45, 0, +45)
        global.HorizontalDashCD = ini_read_real("Stats - Horizontal Dash","HorizontalDashCD",3);
        global.staminaHDash = ini_read_real("Stats - Horizontal Dash","staminaHDash",20);
        
        global.playerADHDash = ini_read_real("Stats - Horizontal Dash","playerADHDash",1);
        global.playerPenArmHDash = ini_read_real("Stats - Horizontal Dash","playerPenArmHDash",1);
        global.playerTrueADHDash = ini_read_real("Stats - Horizontal Dash","playerTrueADHDash",1);
        global.playerAPHDash = ini_read_real("Stats - Horizontal Dash","playerAPHDash",1);
        global.playerPenAPHDash = ini_read_real("Stats - Horizontal Dash","playerPenAPHDash",1);
        global.playerTrueAPHDash = ini_read_real("Stats - Horizontal Dash","playerTrueAPHDash",1);
        global.playerCritickProbabilityHDash = ini_read_real("Combat","playerCritickProbabilityHDash",1); 
        global.playerCritickDamageHDash = ini_read_real("Stats - Horizontal Dash","playerCritickDamageHDash",1);
    
    ini_close();
    room_goto(room_worlds);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load game 3
if (loadGame3 = 1) &amp;&amp; (file_exists("Save3.sav")) {
    
    ini_open("Save3.sav");
    
    //Profile
        global.saveNum = ini_read_real("Profile","saveNum",3);
        global.NameProfile = ini_read_string("Profile","NameProfile","NameProfile");
        global.configStatsBar = ini_read_real("Profile","configStatsBar",1);
        global.configStatsInfo = ini_read_real("Profile","configStatsInfo",1);
        global.configCDbar = ini_read_real("Profile","configCDbar",1);    
        
    //Progress
        global.worlds = ini_read_real("Progress","worlds",1);
        global.lvlMap1 = ini_read_real("Progress","lvlMap1",1);
        global.lvlMap2 = ini_read_real("Progress","lvlMap2",0);
        global.lvlMap3 = ini_read_real("Progress","lvlMap3",0);
        global.lvlMap4 = ini_read_real("Progress","lvlMap4",0);
        global.lvlMap5 = ini_read_real("Progress","lvlMap5",0);
        global.lvlMap6 = ini_read_real("Progress","lvlMap6",0);
        global.hPlayed = ini_read_real("Progress","hPlayed",0);
        global.mPlayed = ini_read_real("Progress","mPlayed",0);
        global.sPlayed = ini_read_real("Progress","sPlayed",0);
        global.progress = ini_read_real("Progress","progress",0);
    
    //Stats
        //Heal
        global.playerMaxHeal = ini_read_real("Stats - Heal","playerMaxHeal",50);
        global.regenHPs = ini_read_real("Stats - Heal","regenHPs",120); 
    
        //Stamina
        global.playerMaxStamina = ini_read_real("Stats - Stamina","playerMaxStamina",100);
        global.regenSTs = ini_read_real("Stats - Stamina","regenSTs",30);
        
        //Exp
        global.playerEXP = ini_read_real("Stats - Exp","playerEXP",0);
        global.playerEXPnextLvL = ini_read_real("Stats - Exp","playerEXPnextLvL",10);
        global.playerLvL = ini_read_real("Stats - Exp","playerLvL",1);
        global.playerPH = ini_read_real("Stats - Exp","playerPH",0);
        
        //Basic
        global.playerAD = ini_read_real("Stats - Basic","playerAD",1);
        global.playerPenArm = ini_read_real("Stats - Basic","playerPenArm",1);
        global.playerTrueAD = ini_read_real("Stats - Basic","playerTrueAD",1);
        global.playerAP = ini_read_real("Stats - Basic","playerAP",1);
        global.playerPenAP = ini_read_real("Stats - Basic","playerPenAP",1)
        global.playerTrueAP = ini_read_real("Stats - Basic","playerTrueAP",1);
        global.playerCritickProbability = ini_read_real("Stats - Basic","playerCritickProbability",30);
        global.playerCritickDamage = ini_read_real("Stats - Basic","playerCritickDamage",10);
        global.playerArmour = ini_read_real("Stats - Basic","playerArmour",1);
        global.playerResAP = ini_read_real("Stats - Basic","playerResAP",1);
        global.resKnockback = ini_read_real("Stats - Basic","resKnockback",1);
        
        
        // Basic attack 
        global.BasicAttackCD = ini_read_real("Stats - Basic Attack","BasicAttackCD",1);
        global.staminaBasicAttack = ini_read_real("Stats - Basic Attack","staminaBasicAttack",10);
        
        global.playerADBasicAttack = ini_read_real("Stats - Basic Attack","playerADBasicAttack",1);
        global.playerPenArmBasicAttack = ini_read_real("Stats - Basic Attack","playerPenArmBasicAttack",1);
        global.playerTrueADBasicAttack = ini_read_real("Stats - Basic Attack","playerTrueADBasicAttack",1);
        global.playerAPBasicAttack = ini_read_real("Stats - Basic Attack","playerAPBasicAttack",1);
        global.playerPenAPBasicAttack = ini_read_real("Stats - Basic Attack","playerPenAPBasicAttack",1);
        global.playerTrueAPBasicAttack = ini_read_real("Stats - Basic Attack","playerTrueAPBasicAttack",1);
        global.playerCritickProbabilityBasicAttack = ini_read_real("Stats - Basic Attack","playerCritickProbabilityBasicAttack",1);
        global.playerCritickDamageBasicAttack = ini_read_real("Stats - Basic Attack","playerCritickDamageBasicAttack",1);
        
        // Spin
        global.SpinCD = ini_read_real("Stats - Spin","SpinCD",1);
        global.staminaSpin = ini_read_real("Stats - Spin","staminaSpin",30);
        
        global.playerADSpin = ini_read_real("Stats - Spin","playerADSpin",1);
        global.playerPenArmSpin = ini_read_real("Stats - Spin","playerPenArmSpin",1);
        global.playerTrueADSpin = ini_read_real("Stats - Spin","playerTrueADSpin",1);
        global.playerAPSpin = ini_read_real("Stats - Spin","playerAPSpin",1);
        global.playerPenAPSpin = ini_read_real("Stats - Spin","playerPenAPSpin",1);
        global.playerTrueAPSpin = ini_read_real("Stats - Spin","playerTrueAPSpin",1);
        global.playerCritickProbabilitySpin = ini_read_real("Stats - Spin","playerCritickProbabilitySpin",1);
        global.playerCritickDamageSpin = ini_read_real("Stats - Spin","playerCritickDamageSpin",1);
        
        // Vertical Dash
        global.VerticalDashCD = ini_read_real("Stats - Vertical Dash","VerticalDashCD",2);
        global.staminaVDash = ini_read_real("Stats - Vertical Dash","staminaVDash",15);
        
        global.playerADVDash = ini_read_real("Stats - Vertical Dash","playerADVDash",1);
        global.playerPenArmVDash = ini_read_real("Stats - Vertical Dash","playerPenArmVDash",1);
        global.playerTrueADVDash = ini_read_real("Stats - Vertical Dash","playerTrueADVDash",1);
        global.playerAPVDash = ini_read_real("Stats - Vertical Dash","playerAPVDash",1);
        global.playerPenAPVDash = ini_read_real("Stats - Vertical Dash","playerPenAPVDash",1);
        global.playerTrueAPVDash = ini_read_real("Stats - Vertical Dash","playerTrueAPVDash",1);
        global.playerCritickProbabilityVDash = ini_read_real("Stats - Vertical Dash","playerCritickProbabilityVDash",1);
        global.playerCritickDamageVDash = ini_read_real("Stats - Vertical Dash","playerCritickDamageVDash",1);
        
        // Horizontal Dash (-45, 0, +45)
        global.HorizontalDashCD = ini_read_real("Stats - Horizontal Dash","HorizontalDashCD",3);
        global.staminaHDash = ini_read_real("Stats - Horizontal Dash","staminaHDash",20);
        
        global.playerADHDash = ini_read_real("Stats - Horizontal Dash","playerADHDash",1);
        global.playerPenArmHDash = ini_read_real("Stats - Horizontal Dash","playerPenArmHDash",1);
        global.playerTrueADHDash = ini_read_real("Stats - Horizontal Dash","playerTrueADHDash",1);
        global.playerAPHDash = ini_read_real("Stats - Horizontal Dash","playerAPHDash",1);
        global.playerPenAPHDash = ini_read_real("Stats - Horizontal Dash","playerPenAPHDash",1);
        global.playerTrueAPHDash = ini_read_real("Stats - Horizontal Dash","playerTrueAPHDash",1);
        global.playerCritickProbabilityHDash = ini_read_real("Combat","playerCritickProbabilityHDash",1); 
        global.playerCritickDamageHDash = ini_read_real("Stats - Horizontal Dash","playerCritickDamageHDash",1);
    
    ini_close();
    room_goto(room_worlds);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Error event
if (loadGame1) || (loadGame2) || (loadGame3) {
    if (loadGame1 = 1) {
        if (!file_exists("Save1.sav")) {
            error = 1;
        }
    }
    if (loadGame2 = 1) {
        if (!file_exists("Save2.sav")) {
            error = 1;
        }
    }
    if (loadGame3 = 1) {
        if (!file_exists("Save3.sav")) {
            error = 1
        }
    }
} else {
    error = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x= 0;;
y= 0;

    draw_set_alpha(0.7)
    draw_set_colour(c_white)
    draw_rectangle(x-400, y-300, x+400, y+200, false)
    draw_set_alpha(1);
    draw_set_color(c_gray);
    draw_set_font(fnt_default_24);
    draw_set_halign(fa_center);
    
    draw_text(x+view_wview/2,y+30,"Select your save");
    
    draw_set_halign(fa_center);
    draw_set_valign(fa_top);
    draw_set_font(fnt_default9);    


    draw_text(x+view_wview*(1/5),y+80,
    + "#Level 1"
    );        

    draw_text(x+view_wview/2,y+80,
    + "#Level 2"
    );

    draw_text(x+view_wview*(4/5),y+80,
    + "#Level 3"
    );
            
    if i = 0 {
        draw_text(x+view_wview*(1/5),y+80,"#               &lt;");
    }
    if i = 1 {
        draw_text(x+view_wview*(1/2),y+80,"#               &lt;");
    }
    if i = 2 {
        draw_text(x+view_wview*(4/5),y+80,"#               &lt;");
    }
    

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Back with ESC
if keyboard_check_pressed(vk_escape) { room_goto(room_play); }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Error
if error = 1 {
    timingError = 0.5;
}

if timingError &gt; 0 { 
    timingError -= 1/120;

    draw_set_alpha(1);
    draw_set_colour(c_maroon);
    draw_set_font(fnt_default_24);    
    draw_set_halign(fa_center);
    draw_text(view_wview/2,300,"Level not avaliable");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
