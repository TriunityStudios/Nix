<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s = 0;
frameCartel = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(vk_f2) {
    if !window_get_fullscreen(){
        window_center();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu
x= view_wview/2
y= view_hview/2

if showInitialPanel = 0 {
    
    if (s &lt; 2) &amp;&amp; (keyboard_check_pressed(vk_down)) {
        s += 1;
    }
    
    if (s &gt; 0) &amp;&amp; (keyboard_check_pressed(vk_up)) {
        s -= 1;
    }
    
    if (s = 0) &amp;&amp; (keyboard_check_pressed(vk_enter)) {
        room_goto(room_play);
    }
    
    if (s = 1) &amp;&amp; (keyboard_check_pressed(vk_enter)) {
        room_goto(room_GraphicSettings);
    }
    
    if (s = 2) &amp;&amp; (keyboard_check_pressed(vk_enter)) {
        game_end();
    }
    
    draw_set_color(c_black);
    draw_set_font(fnt_default50);
    draw_set_halign(fa_center);
    draw_set_valign(fa_center);
    
    if s = 0 {
        draw_set_alpha(1);
        draw_text(x,y+50*-1,"&gt; PLAY &lt;");
        draw_set_alpha(0.7);
        draw_text(x,y+50*0,"SETTINGS");
        draw_text(x,y+50*1,"EXIT");
    }
    
    if s = 1 {
        draw_set_alpha(0.7);
        draw_text(x,y+50*-1,"PLAY");
        draw_set_alpha(1);
        draw_text(x,y+50*0,"&gt; SETTINGS &lt;");
        draw_set_alpha(0.7);
        draw_text(x,y+50*1,"EXIT");
    }
    
    if s = 2 {
        draw_set_alpha(0.7);
        draw_text(x,y+50*-1,"PLAY");
        draw_text(x,y+50*0,"SETTINGS");
        draw_set_alpha(1);
        draw_text(x,y+50*1,"&gt; EXIT &lt;");
    }
    
    draw_set_valign(fa_top);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Show Initial Panel
if showInitialPanel = 1 {
    if frameCartel &gt;= sprite_get_number(spr_initialAd) {
        goBig = 0;
    } 
    if frameCartel &lt;= 0 {
        goBig = 1;        
    }
    
    if goBig = 1 {
        if frameCartel &lt; sprite_get_number(spr_initialAd) {
            frameCartel += 1/7;
        }
    } else {
        if frameCartel &gt; 0 {
            frameCartel -= 1/7;
        }
    }
    
    draw_set_alpha(1);
    draw_sprite(spr_initialAd,frameCartel,view_wview/2,view_hview/2)
    if keyboard_check_pressed(vk_enter) || keyboard_check_pressed(vk_return) || keyboard_check_pressed(vk_space) {
        showInitialPanel = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
