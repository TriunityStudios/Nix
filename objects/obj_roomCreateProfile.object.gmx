<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>totalOptions = 5;
i = 0;
name = "";
t = 0;
blink = true;
blinkSpeed = room_speed/2;
alarm[0] = blinkSpeed;
b1 = 0;
b2 = 0;
b3 = 0;
keyboard_string = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if i = 0 {
    if blink == false {
        blink = true
    } else {
        blink = false;
    }
}
alarm[0] = blinkSpeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move between options
if (i &lt; totalOptions-1) &amp;&amp; (keyboard_check_pressed(vk_down)) {
    i += 1;
}

if (i &gt; 0) &amp;&amp; (keyboard_check_pressed(vk_up)) {
    i -= 1;
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change config
if keyboard_check_pressed(vk_left) {
    if i = 1 {
        if b1 = 1 { b1 = 0 }
    }
    if i = 2 {
        if b2 = 1 { b2 = 0 }
    }
    if i = 3 {
        if b3 = 1 { b3 = 0 }
    }
}

if keyboard_check_pressed(vk_right) {
    if i = 1 {
        if b1 = 0 { b1 = 1 }
    }
    if i = 2 {
        if b2 = 0 { b2 = 1 }
    }
    if i = 3 {
        if b3 = 0 { b3 = 1 }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Save all vars and go to the next room
if keyboard_check_pressed(vk_enter) &amp;&amp; i = 4 {
    global.NameProfile = name;
    global.configStatsBar = b1;
    global.configStatsInfo = b2;
    global.configCDbar = b3;
    room_goto(room_worlds);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Return to the menu with ESC
if keyboard_check_pressed(vk_escape) { 
    if (file_exists("Save1.sav")) || (file_exists("Save2.sav")) || (file_exists("Save3.sav")) {
        room_goto(room_chooseWhereSave);
    } else {
        room_goto(room_play);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Techincal or visual set string
if b1 = 1 { stringb1 = "Technical"; } else {stringb1 = "Visual"}
if b2 = 1 { stringb2 = "Technical"; } else {stringb2 = "Visual"}
if b3 = 1 { stringb3 = "Technical"; } else {stringb3 = "Visual"}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x= 0;;
y= 0;

    draw_set_alpha(0.7)
    draw_set_colour(c_white)
    draw_rectangle(x-400, y-300, x+400, y+200, false)
    draw_set_alpha(1);
    draw_set_color(c_gray);
    draw_set_font(fnt_default_24);
    draw_set_halign(fa_center);
    
    draw_text(x+view_wview/2,y+30,"Configure your profile");
    
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    draw_set_font(fnt_default9);    

    if i = 0 {
        if t = 1 {
            keyboard_string = finalName;
            t = 0;
        } else {
                name = string(keyboard_string);
        }

    } else {
        finalName = name;
        t = 1;
        blink = false;
    }
    
    
    
    
    if name = "" {
        draw_text(x+view_wview*(1/10),y+80,
        + "#Name:  write here"
        );        
    } else {
        if blink == false {        
            draw_text(x+view_wview*(1/10),y+80,
            + "#Name:  " + string(name)
            );            
        } else {
            draw_text(x+view_wview*(1/10),y+80,
            + "#Name:  " + string(name) + "|"
            );               
        }    
    }

    draw_text(x+view_wview*(1/10),y+100,
    + "#Stats bar configuration: " + string(stringb1)
    );

    draw_text(x+view_wview*(1/10),y+120,
    + "#General stats configuration: " + string(stringb2)
    );
    
    draw_text(x+view_wview*(1/10),y+140,
    + "#Coldown info configuration: " + string(stringb3)
    );

    draw_text(x+view_wview*(1/10),y+160,
    + "#DONE"
    );    
                
    draw_text(x+view_wview*(1/10)-15,y+80+(20*i),"#&gt;");
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Example stats bars

xPosBar = view_xview[view_current] + 400;
yPosBar = view_yview[view_current] + 100;  


//Visual
if b1 = 0 { 
    
    hpIndex = (100*(sprite_get_number(spr_hp_bar_visual)-1))/100;
    draw_sprite(spr_hp_bar_visual,hpIndex,xPosBar+18,yPosBar+8);
    
    stIndex = (100*(sprite_get_number(spr_st_bar_visual)-1))/100;
    draw_sprite(spr_st_bar_visual,stIndex,xPosBar+18,yPosBar+14);
    
    xpIndex = (100*(sprite_get_number(spr_xp_bar_visual)-1))/100;
    draw_sprite(spr_xp_bar_visual,xpIndex,xPosBar+26,yPosBar+12);
    
    draw_sprite(spr_base_stats_visual,0,xPosBar,yPosBar);
    
    draw_sprite(spr_lvl_indicator,0,xPosBar+5,yPosBar+5);

    
    draw_set_color(c_white);
    draw_set_font(fnt_default9);
    draw_set_halign(fa_center);
    draw_set_valign(fa_center);
    draw_text(xPosBar+11,yPosBar+13,string(playerLvL));
    draw_set_valign(fa_bottom);

}

//Tech
if b1 = 1 {
    
    hpIndex = (100*(sprite_get_number(spr_hp_bar_big)-1))/100;
    draw_sprite(spr_hp_bar_big,hpIndex,xPosBar+19,yPosBar+2);
    
    xpIndex = (100*(sprite_get_number(spr_xp_bar_big)-1))/playerEXPnextLvL;
    draw_sprite(spr_xp_bar_big,xpIndex,xPosBar+20,yPosBar+10);
    
    stIndex = (100*(sprite_get_number(spr_st_bar_big)-1))/100;
    draw_sprite(spr_st_bar_big,stIndex,xPosBar+19,yPosBar+18);
    
    draw_sprite(spr_base_stats_big,0,xPosBar,yPosBar);
    
    draw_set_alpha(1);
    draw_set_color(c_white);
    draw_set_font(fnt_default6);
    draw_set_halign(fa_center);
    draw_set_valign(fa_top);
    draw_text(xPosBar+19+sprite_get_width(spr_hp_bar_big)/2,yPosBar+2,"HP: " + string(round(100)) + "/" + string(round(100)));
    draw_text(xPosBar+20+sprite_get_width(spr_xp_bar_big)/2,yPosBar+10,"EXP: " + string(round(100)) + "/" + string(round(100)));
    draw_text(xPosBar+19+sprite_get_width(spr_st_bar_big)/2,yPosBar+18,"ST: " + string(round(100)) + "/" + string(round(100)));
    draw_set_valign(fa_bottom);
    
    
    draw_sprite(spr_lvl_indicator,0,xPosBar+5,yPosBar+5);
    
    draw_set_color(c_white);
    draw_set_font(fnt_default9);
    draw_set_halign(fa_center);
    draw_set_valign(fa_center);
    draw_text(xPosBar+11,yPosBar+13,string(playerLvL));
    draw_set_valign(fa_bottom);

}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Example CD Bar

xPosBarCD = view_xview[view_current] + 420;
yPosBarCD = view_yview[view_current] + 160;

//Visual
if b3 = 0 {
    
    spinIndex = (100*(sprite_get_number(spr_spin_CD)-1))/63;
    draw_sprite(spr_spin_CD,spinIndex,xPosBarCD+18,yPosBarCD-1);
    
    vDashIndex = (100*(sprite_get_number(spr_vdash_CD)-1))/21;
    draw_sprite(spr_vdash_CD,vDashIndex,xPosBarCD+38,yPosBarCD-1);
    
    hDashIndex = (100*(sprite_get_number(spr_hdash_CD)-1))/81;
    draw_sprite(spr_hdash_CD,hDashIndex,xPosBarCD+58,yPosBarCD-1);
        
    draw_set_color(c_white);
    draw_set_font(fnt_default9);
    draw_set_halign(fa_center);
    draw_set_valign(fa_center);
    draw_text(xPosBarCD+7.5,yPosBarCD-10,string(27));
    draw_set_valign(fa_bottom);

    draw_sprite(spr_PH_inCDbar,0,xPosBarCD+1,yPosBarCD-1);
    
    draw_sprite(spr_base_CD,0,xPosBarCD,yPosBarCD);

}


///Tech
if b3 = 1 {
    
    spinIndex = (100*(sprite_get_number(spr_spin_CD_tech)-1))/63;
    draw_sprite(spr_spin_CD_tech,spinIndex,xPosBarCD+18,yPosBarCD-1);
    
    vDashIndex = (100*(sprite_get_number(spr_vdash_CD_tech)-1))/21;
    draw_sprite(spr_vdash_CD_tech,vDashIndex,xPosBarCD+38,yPosBarCD-1);
    
    hDashIndex = (100*(sprite_get_number(spr_hdash_CD_tech)-1))/81;
    draw_sprite(spr_hdash_CD_tech,hDashIndex,xPosBarCD+58,yPosBarCD-1);
        
    draw_set_color(c_white);
    draw_set_font(fnt_default9);
    draw_set_halign(fa_center);
    draw_set_valign(fa_center);
    draw_text(xPosBarCD+7.5,yPosBarCD-10,string(27));
    draw_set_valign(fa_bottom);

    draw_sprite(spr_PH_inCDbar,0,xPosBarCD+1,yPosBarCD-1);
    
    draw_set_color(c_white);
    draw_set_font(fnt_default6);
    draw_set_halign(fa_right);
    draw_set_valign(fa_bottom);
    if 100 &gt; 0 { 
        draw_text(xPosBarCD+34,yPosBarCD-1,string(ceil(3))); }
    if 100 &gt; 0 { 
        draw_text(xPosBarCD+54,yPosBarCD-1,string(ceil(5))); }
    if 100 &gt; 0{ 
        draw_text(xPosBarCD+74,yPosBarCD-1,string(ceil(1))); }
    
    draw_set_valign(fa_bottom);   
    draw_set_halign(fa_left);    
    
    draw_sprite(spr_base_CD,0,xPosBarCD,yPosBarCD);
    
    
        
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
